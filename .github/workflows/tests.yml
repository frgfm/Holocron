name: tests

on:
  push:
    branches: main
  pull_request:
    branches: main

env:
  PYTHON_VERSION: "3.11"
  UV_VERSION: "0.5.13"

jobs:
  deps-sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}
      - name: Run dependency sync checker
        run: |
          uv pip install --system PyYAML
          make deps-check

  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}
      - name: Run the tests
        run: |
          make install-test
          pytest --cov=holocron --cov-report xml tests/
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: ./coverage.xml

  codecov-upload:
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          directory: ./coverage-reports
          fail_ci_if_error: true

  api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}
      - name: Run docker test
        run: make test-api

  headers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Check the headers
        uses: frgfm/validate-python-headers@main
        with:
          license: 'Apache-2.0'
          owner: 'Fran√ßois-Guillaume Fernandez'
          starting-year: 2019
          folders: 'holocron,scripts,references,api/app,demo,docs,.github'
          ignore-files: 'version.py,__init__.py'

  eval-latency:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}
      - name: Run script
        run: |
          make install
          uv pip install --system onnx onnxruntime
          python scripts/eval_latency.py rexnet1_0x
